{
  "term": "Reengineering",
  "total_results": 1,
  "processed_count": 1,
  "discarded_count": 0,
  "items": [
    {
      "doi": "10.1145/958961.958962",
      "title": [
        "Automatic high-quality reengineering of database programs by abstraction, transformation and reimplementation"
      ],
      "type": "journal-article",
      "container-title": [
        "ACM Transactions on Software Engineering and Methodology"
      ],
      "subject": [],
      "abstract": "<jats:p>Old-generation database models, such as the indexed-sequential, hierarchical, or network models, provide record-level access to their data, with all application logic residing in the hosting program. In contrast, relational databases can perform complex operations, such as filter, aggregation, and join, on multiple records without an external specification of the record-access logic. Programs written for relational databases attempt to move as much of the application logic as possible into the database, in order to make the most of the optimizations performed internally by the database.This conceptual gap between the programming styles makes automatic high-quality translation of programs written for the older database models to the relational model difficult. It is not enough to convert just the database-access operations, since this would result in unacceptably inefficient programs. It is necessary to convert parts of the application logic from the procedural style of the hosting program (which is almost always Cobol) to the declarative style of SQL.This article describes an automatic system, called MIDAS, that performs high-quality reengineering of legacy database programs in this way. MIDAS is based on the paradigm of translation by abstraction, transformation, and reimplementation. The abstract representation is based on the Plan Calculus, with the addition of Query Graphs, introduced in this article in order to abstract the temporal behavior of database access patterns.The results of MIDAS's translation were found to be superior to those of the naive translation that only converts database-access operations in terms of readability, size of code, speed, and network data traffic. Initial industrial experience with MIDAS also demonstrates the high quality of its translations on large-scale programs.</jats:p>",
      "publication_date": "2003-07"
    }
  ]
}