# Environment Configuration Template for Dash Dashboard
# Copy this file to .env and update with your actual values
# DO NOT commit .env to version control

# ============================================================================
# Application Settings
# ============================================================================

# Port the application will listen on
PORT=8050

# Flask environment (development, production, testing)
FLASK_ENV=production

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Application version (for tracking deployments)
APP_VERSION=1.0.0

# ============================================================================
# Gunicorn Server Settings
# ============================================================================

# Number of worker processes (auto = CPU cores * 2 + 1)
# Recommended: 4 for most deployments
MAX_WORKERS=4

# Worker timeout in seconds (how long a worker can take to process a request)
WORKER_TIMEOUT=120

# Worker class (sync, gevent, eventlet)
# Use 'sync' for Dash applications (most reliable)
WORKER_CLASS=sync

# ============================================================================
# Optional: Redis Configuration (if using caching)
# ============================================================================

# Redis connection URL (uncomment if using Redis)
# REDIS_URL=redis://localhost:6379/0

# Redis password (if required)
# REDIS_PASSWORD=your-redis-password

# ============================================================================
# Optional: Rate Limiting (if enabled)
# ============================================================================

# Rate limit storage (memory:// or redis://)
# RATELIMIT_STORAGE_URL=memory://

# Default rate limit (requests per time period)
# RATELIMIT_DEFAULT=200 per hour

# ============================================================================
# Optional: CORS Configuration
# ============================================================================

# Allowed origins for CORS (comma-separated)
# Use * for public dashboards, or specify domains for restricted access
# ALLOWED_ORIGINS=*
# ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ============================================================================
# Optional: External Services
# ============================================================================

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Sentry environment tag
# SENTRY_ENVIRONMENT=production

# Sentry sample rate (0.0 to 1.0)
# SENTRY_TRACES_SAMPLE_RATE=0.1

# ============================================================================
# Optional: Database Configuration (if migrating from SQLite)
# ============================================================================

# PostgreSQL connection (if migrating from SQLite in the future)
# DATABASE_URL=postgresql://user:password@localhost:5432/dbname

# ============================================================================
# Dokploy Specific Settings
# ============================================================================

# Domain name (set by Dokploy, but can be overridden)
# DOMAIN=dashboard.yourdomain.com

# SSL/TLS (handled by Dokploy, but can be configured)
# FORCE_HTTPS=true

# ============================================================================
# Development Settings (Local Development Only)
# ============================================================================

# Enable debug mode (NEVER use in production)
# DEBUG=false

# Enable Flask debug toolbar (development only)
# FLASK_DEBUG_TOOLBAR=false

# Hot reload (development only)
# RELOAD=false

# ============================================================================
# Performance Tuning
# ============================================================================

# Maximum request size (in bytes)
# MAX_CONTENT_LENGTH=16777216

# Request timeout (seconds)
# REQUEST_TIMEOUT=30

# ============================================================================
# Monitoring & Metrics (Optional)
# ============================================================================

# Enable Prometheus metrics endpoint
# ENABLE_METRICS=false

# Metrics port (if different from main app)
# METRICS_PORT=9090

# ============================================================================
# Notes
# ============================================================================

# 1. Copy this file to .env: cp .env.example .env
# 2. Update values as needed for your environment
# 3. Never commit .env to version control
# 4. In Dokploy, set these in the Environment Variables section
# 5. Required variables: PORT, FLASK_ENV, LOG_LEVEL
# 6. Optional variables: Everything else (has sensible defaults)