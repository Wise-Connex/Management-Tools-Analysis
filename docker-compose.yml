# Docker Compose Configuration for Local Development and Testing
# This file is optional - Dokploy handles orchestration in production

version: "3.8"

services:
  # ============================================================================
  # Dash Dashboard Application
  # ============================================================================
  dash:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dash_dashboard
    ports:
      - "${PORT:-8050}:8050"
    environment:
      # Application settings
      - PORT=8050
      - FLASK_ENV=${FLASK_ENV:-production}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - APP_VERSION=${APP_VERSION:-1.0.0}

      # Gunicorn settings
      - MAX_WORKERS=${MAX_WORKERS:-4}
      - WORKER_TIMEOUT=${WORKER_TIMEOUT:-120}
      - WORKER_CLASS=${WORKER_CLASS:-sync}

    volumes:
      # Mount databases for persistence (optional - can be in image)
      - ./dashboard_app/data.db:/app/dashboard_app/data.db
      - ./dashboard_app/notes_and_doi.db:/app/dashboard_app/notes_and_doi.db

      # Mount assets for development (optional)
      - ./assets:/app/assets:ro

      # Mount logs directory
      - ./logs:/app/logs

    healthcheck:
      test: ["CMD", "./healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    restart: unless-stopped

    networks:
      - dash_network

    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
        reservations:
          cpus: "0.5"
          memory: 512M

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ============================================================================
  # Optional: Redis for Caching (uncomment if needed)
  # ============================================================================
  # redis:
  #   image: redis:7-alpine
  #   container_name: dash_redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   command: redis-server --appendonly yes
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   restart: unless-stopped
  #   networks:
  #     - dash_network

  # ============================================================================
  # Optional: Nginx Reverse Proxy (uncomment if testing SSL locally)
  # ============================================================================
  # nginx:
  #   image: nginx:1.25-alpine
  #   container_name: dash_nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./assets:/app/assets:ro
  #   depends_on:
  #     - dash
  #   restart: unless-stopped
  #   networks:
  #     - dash_network

# ============================================================================
# Networks
# ============================================================================
networks:
  dash_network:
    driver: bridge
    name: dash_network
# ============================================================================
# Volumes (uncomment if using Redis or external databases)
# ============================================================================
# volumes:
#   redis_data:
#     name: dash_redis_data
